AWSTemplateFormatVersion: "2010-09-09"
Description: "SageMaker Workshop - CloudFormation Template"

Resources:
  PublicBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "sg-tko-workshop-public-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html

  PublicBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PublicBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: "PublicBucket"
                  - "/*"
            Principal: "*"

  PrivateBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "sg-tko-workshop-private-${AWS::AccountId}"
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedOrigins: ['*']
            AllowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - HEAD
            Id: myCORSRuleId1
  CognitoIdentityPoolId:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      AllowUnauthenticatedIdentities: True

  CognitoRole:
    DependsOn: CognitoIdentityPoolId
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "cognito-god-role-${AWS::AccountId}"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSLambdaFullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated:
                - "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              {
                "ForAnyValue:StringLike":
                  { "cognito-identity.amazonaws.com:amr": "unauthenticated" },
                "StringEquals":
                  {
                    "cognito-identity.amazonaws.com:aud": !Ref CognitoIdentityPoolId,
                  },
              }
      Path: "/"

  CognitoRoleAttach:
    DependsOn: CognitoIdentityPoolId
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    Properties:
      IdentityPoolId: !Ref CognitoIdentityPoolId
      Roles: { "unauthenticated": !GetAtt CognitoRole.Arn }

Outputs:
  Region:
    Description: Region.
    Value: !Ref "AWS::Region"
  
  PrivateBucket:
    Description: Private S3 bucket.
    Value: !Ref PrivateBucket

  PublicBucket:
    Description: Public S3 bucket.
    Value: !Ref PublicBucket

  PublicWebSite:
    Description: Public website hosted on S3.
    Value: !GetAtt PublicBucket.WebsiteURL

  CognitoIdentityPoolId:
    Description: Identity ID to access AWS resources.
    Value: !Ref CognitoIdentityPoolId
